buildscript {
    ext {
        shadowJarVersion = '5.1.0'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:${shadowJarVersion}"
    }
}

plugins {
    id "com.github.ben-manes.versions" version '0.39.0'
    id 'com.adarshr.test-logger' version '2.1.1'
    id 'com.diffplug.spotless' version '5.15.0'
    id 'com.bmuschko.docker-java-application' version '7.1.0'
}

apply from: "$rootDir/gradle-scripts/extensions.gradle"
apply from: "$rootDir/gradle-scripts/plugins.gradle"
apply from: "$rootDir/gradle-scripts/project-info.gradle"
apply from: "$rootDir/gradle-scripts/java-compile.gradle"
apply from: "$rootDir/gradle-scripts/repositories.gradle"
apply from: "$rootDir/gradle-scripts/test.gradle"
apply from: "$rootDir/gradle-scripts/integration-tests.gradle"
apply from: "$rootDir/gradle-scripts/test-logger.gradle"
apply from: "$rootDir/gradle-scripts/set-library-version.gradle"


ext {
    mockitoVersion = '3.12.4'
    slf4jTestVersion = '1.2.0'
    assertjVersion = '3.20.2'
    pmdVersion = '5.6.1'
    jacocoVersion = '0.8.6'
    findbugsVersion = '3.0.1'
    commercetoolsSyncJava = '7.0.1'
    apacheCliVersion = '1.4'
    jupiterApiVersion = '5.8.0'
    asyncHttpClientVersion = '2.12.3'
    logbackVersion = '1.2.6'
    logstashLogbackEncoderVersion= '6.6'
}

apply from: "$rootDir/gradle-scripts/spotless.gradle"
apply from: "$rootDir/gradle-scripts/pmd.gradle"
apply from: "$rootDir/gradle-scripts/jacoco.gradle"
apply from: "$rootDir/gradle-scripts/findbugs.gradle"
apply from: "$rootDir/gradle-scripts/shadow.gradle"
apply from: "$rootDir/gradle-scripts/docker.gradle"
apply from: "$rootDir/gradle-scripts/execution-order.gradle"

/**
 * 1. This cannot be in the "gradle-scripts/execution-order.gradle" script due to
 * "Script plugins do not have access to the main buildscript classpath.":
 * https://discuss.gradle.org/t/cant-access-classes-from-plugin-directly-in-included-script/14721/2
 *
 * 2. Cannot use normal dependsOn syntax due to https://github.com/diffplug/spotless/issues/198#issuecomment-363542192
 */

import com.diffplug.gradle.spotless.SpotlessTask
tasks.withType(SpotlessTask) {
    it.mustRunAfter compileIntegrationTestJava
    pmdMain.mustRunAfter it
}

dependencies {
    implementation "com.commercetools:commercetools-sync-java:${commercetoolsSyncJava}"

    implementation "org.asynchttpclient:async-http-client:${asyncHttpClientVersion}"

    implementation "commons-cli:commons-cli:${apacheCliVersion}"
    implementation "ch.qos.logback:logback-classic:${logbackVersion}"
    implementation "ch.qos.logback:logback-core:${logbackVersion}"
    implementation "net.logstash.logback:logstash-logback-encoder:${logstashLogbackEncoderVersion}"
    implementation "com.google.code.findbugs:annotations:${findbugsVersion}"

    constraints {
        implementation("com.fasterxml.jackson.dataformat:jackson-dataformat-cbor:2.12.5") {
            because "previous versions are vulnerable to DoS"
        }
        implementation("io.netty:netty-codec-http:4.1.68.Final") {
            because "previous versions are vulnerable to Information Disclosure"
        }
    }
    testImplementation "uk.org.lidalia:slf4j-test:${slf4jTestVersion}"
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${jupiterApiVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${jupiterApiVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${jupiterApiVersion}"
    testImplementation "org.assertj:assertj-core:${assertjVersion}"
}
